{"ast":null,"code":"import _initializerDefineProperty from \"/Users/lingessrajoo/Desktop/miles-rewards/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/lingessrajoo/Desktop/miles-rewards/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/lingessrajoo/Desktop/miles-rewards/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _temp,\n    _class3,\n    _temp2,\n    _jsxFileName = \"/Users/lingessrajoo/Desktop/miles-rewards/src/components/Rewards/Rewards.tsx\";\n\nimport React, { Component } from \"react\";\nimport { Row, Col, Layout } from \"antd\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { Reward } from \"../../models/Reward\";\nimport { Category } from \"../../models/Category\";\nimport { RewardsList } from \"../../constants/rewardsList\";\nimport { CategoriesList } from \"../../constants/catergoriesList\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Column } from \"../Column/Column\";\nimport { v4 as uuidv4 } from 'uuid';\nconst {\n  Content\n} = Layout;\nlet RewardsVM = (_class = (_temp = class RewardsVM {\n  constructor() {\n    _initializerDefineProperty(this, \"rewardList\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"categoryList\", _descriptor2, this);\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const addingReward = source.droppableId === \"rewards\" && [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\"].includes(destination.droppableId);\n      const rewardExists = this.categoryList.filter(category => category.id === destination.droppableId).includes(draggableId);\n\n      if (addingReward && !rewardExists) {\n        this.categoryList.forEach(category => {\n          if (category.id === destination.droppableId) {\n            category.rewards.push(new Reward(uuidv4(), draggableId.toUpperCase()));\n          }\n        });\n        console.log('here');\n        return;\n      }\n\n      console.log('here2');\n\n      if (!addingReward) {\n        this.categoryList.forEach(category => {\n          if (category.id === source.droppableId) {\n            const i = category.rewards.indexOf(category);\n            category.rewards.splice(i, 1);\n          }\n\n          if (category.id === destination.droppableId) {\n            category.rewards.push(new Reward(draggableId, draggableId.toUpperCase()));\n          }\n        });\n      }\n    };\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"rewardList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"categoryList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n})), _class);\n\nlet Rewards = observer(_class3 = (_temp2 = class Rewards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.vm = new RewardsVM();\n  }\n\n  componentDidMount() {\n    RewardsList.forEach(reward => this.vm.rewardList.push(new Reward(reward.id, reward.name)));\n    CategoriesList.forEach(category => this.vm.categoryList.push(new Category(category.id, category.name, category.rewards)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.vm.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      style: {\n        margin: \"20px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, \"Rewards\"))), /*#__PURE__*/React.createElement(Col, {\n      xs: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \"Categories\")))), /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      style: {\n        marginTop: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      rewards: this.vm.rewardList,\n      id: \"rewards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, this.vm.categoryList.map(category => {\n      return /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        key: category.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        rewards: category.rewards,\n        id: category.id,\n        title: category.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }\n      })));\n    })))))));\n  }\n\n}, _temp2)) || _class3;\n\nexport { Rewards as default };","map":{"version":3,"sources":["/Users/lingessrajoo/Desktop/miles-rewards/src/components/Rewards/Rewards.tsx"],"names":["React","Component","Row","Col","Layout","observable","observer","Reward","Category","RewardsList","CategoriesList","DragDropContext","Column","v4","uuidv4","Content","RewardsVM","onDragEnd","result","destination","source","draggableId","droppableId","index","addingReward","includes","rewardExists","categoryList","filter","category","id","forEach","rewards","push","toUpperCase","console","log","i","indexOf","splice","Rewards","vm","componentDidMount","reward","rewardList","name","render","margin","marginTop","height","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Layout } from \"antd\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { Reward } from \"../../models/Reward\";\nimport { Category } from \"../../models/Category\";\nimport { RewardsList } from \"../../constants/rewardsList\";\nimport { CategoriesList } from \"../../constants/catergoriesList\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Column } from \"../Column/Column\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst { Content } = Layout;\n\nclass RewardsVM {\n  @observable rewardList: Reward[] = [];\n  @observable categoryList: Category[] = [];\n\n  onDragEnd = (result: any) => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const addingReward: boolean =\n      source.droppableId === \"rewards\" &&\n      [\"c1\", \"c2\", \"c3\", \"c4\", \"c5\"].includes(destination.droppableId);\n\n   const rewardExists = this.categoryList\n      .filter(category => category.id === destination.droppableId).includes(draggableId)\n\n    if(addingReward && !rewardExists){\n        this.categoryList\n        .forEach(category => {\n            if(category.id === destination.droppableId){\n                category.rewards.push(new Reward(uuidv4(), draggableId.toUpperCase()))\n            }\n        })\n        console.log('here')\n        return\n    }\nconsole.log('here2')\n    if(!addingReward){\n        this.categoryList\n        .forEach(category => {\n            if(category.id === source.droppableId){\n                const i = category.rewards.indexOf(category)\n                category.rewards.splice(i,1)\n            }\n            if(category.id === destination.droppableId){\n                category.rewards.push(new Reward(draggableId, draggableId.toUpperCase()))\n            }\n        })\n    }\n  \n  };\n\n\n}\n\n@observer\nexport default class Rewards extends Component {\n  vm = new RewardsVM();\n\n  componentDidMount() {\n    RewardsList.forEach(reward =>\n      this.vm.rewardList.push(new Reward(reward.id, reward.name))\n    );\n    CategoriesList.forEach(category =>\n      this.vm.categoryList.push(\n        new Category(category.id, category.name, category.rewards)\n      )\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Content>\n          <DragDropContext onDragEnd={this.vm.onDragEnd}>\n            <Row justify=\"center\" style={{ margin: \"20px 0\" }}>\n              <Col xs={4}>\n                <Row justify=\"center\">\n                  <h1>Rewards</h1>\n                </Row>\n              </Col>\n              <Col xs={20}>\n                <Row justify=\"center\">\n                  <h1>Categories</h1>\n                </Row>\n              </Col>\n            </Row>\n            <Row justify=\"center\">\n              <Col xs={4}>\n                <Row justify=\"center\" style={{ marginTop: \"40px\" }}>\n                  <Column rewards={this.vm.rewardList} id=\"rewards\" />\n                </Row>\n              </Col>\n              <Col xs={20}>\n                <Row justify=\"center\" style={{ height: \"100%\" }}>\n                  {this.vm.categoryList.map(category => {\n                    return (\n                      <Col span={4} key={category.id}>\n                        <Row justify=\"center\">\n                          <Column\n                            rewards={category.rewards}\n                            id={category.id}\n                            title={category.name}\n                          />\n                        </Row>\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </Col>\n            </Row>\n          </DragDropContext>\n        </Content>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}